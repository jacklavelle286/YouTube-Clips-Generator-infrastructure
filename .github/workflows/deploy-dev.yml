name: Terraform Deployment 

on:
  workflow_dispatch:
    inputs:
        environment:
            description: "Environment, either dev test or prod"
            required: true
        region:
            description: "Region for deployment"
            required: true
        assume_role:
            description: "Role which github actions will asssume"
            required: true
        account_id:
            description: "current account id"
            required: true
  

env:
  TF_VAR_environment: ${{ inputs.environment }}
  TF_VAR_region: ${{ inputs.region }}
  TF_VAR_assume_role: ${{ inputs.assume_role }}
  TF_VAR_account_id: ${{ inputs.account_id }}


permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ inputs.assume_role }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ inputs.region }}

      - name: STS Get Caller Identity
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ inputs.account_id }}-${{ inputs.region }}-backend-infra-tf-yt" \
            -backend-config="region=${{ inputs.region }}" \
            -backend-config="dynamodb_table=${{ env.TARGET_ACCOUNT }}-${{ inputs.region }}-backend-infra-tf-yt-lock" \
            -backend-config="key=terraform/state.tfstate"

      - name: Terraform Plan
        run: terraform plan -var="environment=${{ env.ENVIRONMENT }}" -var="region=${{ inputs.region }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="environment=${{ env.ENVIRONMENT }}" -var="region=${{ inputs.region }}"
