AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template is a stack set of an OIDC provider and an IAM role for each of my GitHub Action
  pipelines to authenticate to the dev, staging, and prod environments. This also includes pre-configured backend state files
  and table locks to allow my infra to be separate across accounts (dev, staging, prod) which will be conditionally not launched
  if this stack is deployed in the shared services ECR repo account, as there is no nee for a terraform backend in this account.

Parameters:
  ClientListID:
    Description: "Client List id"
    Type: String
    Default: "sts.amazonaws.com"
  ThumbprintList:
    Description: "List of thumbprints of the provider"
    Type: String
    Default: "6938fd4d98bab03faadb97b34396831e3780aea1"
  OIDCURL:
    Description: "OIDC URL"
    Type: String
    Default: "https://token.actions.githubusercontent.com"
  TrustedRepo:
    Description: "The repository that my IAM role is trusted to deploy to."
    Type: String
    Default: "repo:jacklavelle286/*"
  PermissionsForRole:
    Description: "Permissions for the Role"
    Type: String
    Default: "arn:aws:iam::aws:policy/AdministratorAccess"
  SharedServicesAccountID:
    Description: The account id of the shared services account.
    Type: String
    Default: "908027392835"

Conditions:
  IsNotSpecificAccount: !Not 
    - !Equals [ !Ref "AWS::AccountId", !Ref SharedServicesAccountID ]

Resources:
  OIDC:
    Type: AWS::IAM::OIDCProvider
    Properties:
      ClientIdList:
        - !Ref ClientListID
      ThumbprintList:
        - !Ref ThumbprintList
      Url: !Ref OIDCURL

  OIDCRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "OIDCRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "WebIdentity"
            Effect: "Allow"
            Principal:
              Federated: !GetAtt OIDC.Arn
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": !Ref TrustedRepo
      ManagedPolicyArns:
        - !Ref PermissionsForRole

  S3Backend:
    Type: AWS::S3::Bucket
    Condition: IsNotSpecificAccount
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-backend-infra-tf-yt"

  DynamoLock:
    Type: AWS::DynamoDB::Table
    Condition: IsNotSpecificAccount
    Properties:
      TableName: !Sub "${AWS::AccountId}-${AWS::Region}-backend-infra-tf-yt-lock"
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: "LockId"
          KeyType: "HASH"
      AttributeDefinitions:
        - AttributeName: "LockId"
          AttributeType: "S"
Outputs:
  OIDCRoleArn:
    Description: Role arn for the OIDC
    Value: !GetAtt OIDCRole.Arn
